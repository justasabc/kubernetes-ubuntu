#===================================================================
# https://github.com/GoogleCloudPlatform/kubernetes/
# https://github.com/coreos/etcd
# https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/getting-started-guides/ubuntu_single_node.md
# https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/getting-started-guides/fedora/fedora_manual_config.md
# http://code.csdn.net/news/2823292
# http://www.infoq.com/cn/articles/centos7-practical-kubernetes-deployment
# https://github.com/yangzhares/GetStartingKubernetes/tree/master/apiserver

# https://github.com/xinxian0458/kubernetes-ubuntu/
# https://github.com/WIZARD-CXY/kubernetesOnUbuntu/
# https://github.com/coreos/flannel
# https://github.com/kelseyhightower/intro-to-kubernetes-workshop

# https://github.com/coreos/etcd/blob/master/Documentation/configuration.md
# http://unix.stackexchange.com/questions/44370/how-to-make-unix-service-see-environment-variables
# http://www.infoq.com/articles/scaling-docker-with-kubernetes
# https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/design/networking.md
# https://coreos.com/blog/running-kubernetes-example-on-CoreOS-part-2/
# https://coreos.com/docs/cluster-management/setup/flannel-config/
#===================================================================
Ubuntu 14.04.1
Kubernetes 0.8.2
etcd version 0.4.6
Docker version 1.3.2

# *******************************************************************
# 1. Make kubernetes and etcd binaries
# *******************************************************************

# copy binary to /opt/bin
mkdir /opt/bin/

# download etcd binary
wget https://github.com/coreos/etcd/releases/download/v0.4.6/etcd-v0.4.6-linux-amd64.tar.gz
tar xzvf etcd-v0.4.6-linux-amd64.tar.gz
mv etcd-v0.4.6-linux-amd64 etcd
cd etcd
cp etcd etcdctl /opt/bin

# download kubernetes binarn
wget https://github.com/GoogleCloudPlatform/kubernetes/releases/download/v0.8.1/kubernetes.tar.gz
tar xzvf kubernetes.tar.gz
tar zxvf kubernetes/server/kubernetes-server-linux-amd64.tar.gz
cp kubernetes/server/kubernetes/server/bin/kube* /opt/bin

# *******************************************************************
# 2. Install upstart scripts
# *******************************************************************
# Running ubuntu/util.sh would install/copy the scripts for upstart to pick up. The script may warn you on some valid problems/conditions
cd kubernetes/cluster/ubuntu
./util.sh

vim *opts
etcd --help
kube-apiserver --help
kube-controller-manager --help
kube-scheduler --help
kube-proxy --help
kubelet --help

# *******************************************************************
# 3. Start services
# *******************************************************************
service etcd start/stop/restart
ps aufx | grep etcd
ps aufx | grep kube

netstat -na | grep 4001

etcdctl -v
kubectl version

# on master
#iptables -I INPUT -s 0.0.0.0 -p tcp --dport 4001 -j ACCEPT
#iptables -I INPUT -s 0.0.0.0 -p tcp --dport 7001 -j ACCEPT
#iptables -I INPUT -s 0.0.0.0 -p tcp --dport 8080 -j ACCEPT

#iptables -I INPUT -s 192.168.1.0/24 -p tcp --dport 4001 -j ACCEPT
#iptables -I INPUT -s 192.168.1.0/24 -p tcp --dport 7001 -j ACCEPT

# on minions
#iptables -I INPUT -s master -p tcp --dport 10250 -j ACCEPT

# *******************************************************************
# 4. Palying with command line 
# *******************************************************************
etcdctl --peers http://etcd:4001 set mykey "helloworld"
etcdctl --peers http://etcd:4001 get mykey

curl -L http://etcd:4001/version
# 0.4.6
curl -L http://etcd:4001/v2/keys/ | python -m json.tool

# registry json
curl -L http://etcd:4001/v2/keys/registry | python -m json.tool

# nodes
curl -L http://etcd:4001/v2/keys/registry/nodes | python -m json.tool
curl -L http://etcd:4001/v2/keys/registry/nodes/minion1 | python -m json.tool
curl -L http://etcd:4001/v2/keys/registry/nodes/minion1/boundpods | python -m json.tool

# services
/registry/services/
/registry/services/specs/default
/registry/services/specs/default/apache-service
/registry/services/specs/default/kubernetes
/registry/services/specs/default/kubernetes-ro

/registry/services/endpoints/default
/registry/services/endpoints/default/apache-service
# "endpoints\":[\"10.10.69.11:880\",\"10.10.68.8:880\"]}"

# pods
/registry/pods/
/registry/pods/default/

# controllers
/registry/controllers/
/registry/controllers/default/


# master
# kubernetes 8080
# kubernetes-ro 7080
curl -L http://master:8080
curl -L http://master:7080

kubecfg -h http://master:8080 list nodes
kubecfg -h http://master:8080 list minions

kubecfg -h http://master:8080 list pods
kubecfg -h http://master:8080 list services

# default host 127.0.0.1/localhost
# apiserver  --address = 127.0.0.1    

# *******************************************************************
# 5. Walkthrogh
# *******************************************************************
kubecfg -h http://master:8080 -c redis-master.json create pods
kubecfg -h http://master:8080 -c redis-master-service.json create services
